/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    bool isPalindrome(ListNode* head) {
        deque <int> dq;
        ListNode *current = head;
        if(head -> next == NULL){
            return true;
        }
        while (true){

            dq.push_back(current -> val);

            if (current -> next == NULL){
                break;
            }
            current = current -> next;
        }
        while (true){
            if (dq.front() == dq.back()){
                dq.pop_front();
                dq.pop_back();
            }else{
                return false;
            }
            if (dq.size() == 0 || dq.size() == 1){
                return true;
            }
        }

    }
};